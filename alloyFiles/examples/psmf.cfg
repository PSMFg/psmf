//Configuration file for Program Synthesis via Model Finder - PSMF system
//TO adjust System's parameters.
// A pair of slashes stands for comments.

//Inform the alloy file name (whitout extension name, for example: ok06max2).
InputFileName = p01max2;

//Inform the alloy file extension (including the dot symbol, for example: .als).
InputFileExtension = .als;

//Inform number of executions that the system will perform, for simulation purposes.
//For example: NumSysExec=5; means the user will call the system once, and it will perform 5 times.
NumSysExec = 1;

//Distance Metric: explore all available [eAll] or read what is set into this configuration file [rFile]?
//DistanceMetricExploreAllOrReadConfFile = eAll;
DistanceMetricExploreAllOrReadConfFile = rFile;

//The name of the distance metric: discrete | manhattan | euclidean_quadratic | hellinger | chebyshev | minkowski
DistanceMetricType=discrete;
//DistanceMetricType=manhattan;
//DistanceMetricType=minkowski;

//Case DistanceMetricType="minkowski" we have to set the Maximum value of the Distance Minkowski Exponent < 2
MinkowskiExponentMaxValue = 1.65;

//Case DistanceMetricType="minkowski" we have to set 1 < DistanceMinkowskiExponent <= DistanceMinkowskiExponentMaxValue parameter.
DistanceMinkowskiExponent = 1.40;

//Do explore different Minkowski expoents, using this incremental value?
//Set this parameter to 0.0 if you will not want to explore using increments, otherwise the system will perform
//  from while DistanceMinkowskiExponent<2.0 using this increment.
//Minimum value is 0.10. Maximum is 0.90. Try to use values like 0.10, 0.15, 0.20, 0.25, ..., 0.85, 0.90.
//For example: DistanceMinkowskiExponent = 1.5; and IncrementMinkowskiExponent = 0.1; means the system will perform
//  using these DistanceMinkowskiExponent: 1.5; 1.6; 1.7; 1.8; and 1.9.
IncrementMinkowskiExponent = 0.10;

//Inform the population size. Integer value.
PopSize = 2;

//Inform the max allowed evolution's number. Integer value.
MaxAllowEvo = 5;

//Inform the max number of trial to find next solution subset. Integer value.
NumTrialNextSol = 3;

//Outputs the source code's solution if its fitness value is equal to the maximum reached so far? true or false value.
OutPutSolSameFitnessValue = true;

//Use \"exactly\" Alloy's reserved word to reduce Alloy's scope? true or false value.
ExactlyScope = false;

//Set all auto lower bound scope parameters to zero? true or false value.
SetAllLowerBoundToZero = false;

//Inform the Scope factor to reach the upper bound. I.e. if scope's upper bound value < this parameter, then the new upper bound will be this value. Integer value.
SetFactorScopeToUpperBound = 0;

//Use relevant Signatures and their upper bound values for the first Alloy run command?" "auto" and "no" signatures will not considered. true or false value.
UseRelevantSigsFirstAlloyRun = true;

//End up the system when find out the first 100% passed test solution? true or false value.
StopAtFirst100PercSol = true;

//Do display each test cases result? true or false value.
DisplayTestCasesResults = false;

//Inform maxSeq parameter initial value for "run Synt for 3 but..." command.
RunMaxSeq = 3;

//Inform upper bound for Int values used in "run Synth <RunMaxSeq> but -1..<AlloyCmdIntUpperBound> Int..." alloy command. Default value is 9.
AlloyCmdIntUpperBound = 9;

//Do range maxSeq between initial and found values? true or false value.
RangingMaxSeq = false;

//For all signature's scope values these values are accepted:
//  lower:upper bound value pair (for example 1:3 or any other zero or positive integer pair)
//  auto   (the system will define automatically)
//  no     (the system will not take account of such signature)
//  sketch (such signature has already defined as sketch into the alloy als file)
IntVar = auto;
IntVal = auto;
Assign = auto;
SComp  = auto;
CondS  = auto;
While  = auto;
Add    = auto;
Sub    = auto;
Mult   = auto;
EQ     = auto;
NEQ    = auto;
LEQ    = auto;
GEQ    = auto;
GTH    = auto;

//end of file.